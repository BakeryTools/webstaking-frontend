{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { configureStore } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport farmsReducer from './farms';\nimport poolsReducer from './pools';\nimport predictionsReducer from './predictions';\nimport profileReducer from './profile';\nimport teamsReducer from './teams';\nimport achievementsReducer from './achievements';\nimport blockReducer from './block';\nimport collectiblesReducer from './collectibles';\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer\n  }\n});\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\n\nexport const useAppDispatch = () => {\n  _s();\n\n  return useDispatch();\n};\n\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});\n\nexport default store;","map":{"version":3,"sources":["/Users/danialfajar/Downloads/tbake-web-staking-platform-master/src/state/index.ts"],"names":["configureStore","useDispatch","farmsReducer","poolsReducer","predictionsReducer","profileReducer","teamsReducer","achievementsReducer","blockReducer","collectiblesReducer","store","devTools","process","env","NODE_ENV","reducer","achievements","block","farms","pools","predictions","profile","teams","collectibles","useAppDispatch"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,YAAP,MAAyB,SAAzB;AACA,OAAOC,YAAP,MAAyB,SAAzB;AACA,OAAOC,kBAAP,MAA+B,eAA/B;AACA,OAAOC,cAAP,MAA2B,WAA3B;AACA,OAAOC,YAAP,MAAyB,SAAzB;AACA,OAAOC,mBAAP,MAAgC,gBAAhC;AACA,OAAOC,YAAP,MAAyB,SAAzB;AACA,OAAOC,mBAAP,MAAgC,gBAAhC;AAEA,MAAMC,KAAK,GAAGV,cAAc,CAAC;AAC3BW,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YADR;AAE3BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,YAAY,EAAET,mBADP;AAEPU,IAAAA,KAAK,EAAET,YAFA;AAGPU,IAAAA,KAAK,EAAEhB,YAHA;AAIPiB,IAAAA,KAAK,EAAEhB,YAJA;AAKPiB,IAAAA,WAAW,EAAEhB,kBALN;AAMPiB,IAAAA,OAAO,EAAEhB,cANF;AAOPiB,IAAAA,KAAK,EAAEhB,YAPA;AAQPiB,IAAAA,YAAY,EAAEd;AARP;AAFkB,CAAD,CAA5B;AAcA;AACA;AACA;;AAEA,OAAO,MAAMe,cAAc,GAAG;AAAA;;AAAA,SAAMvB,WAAW,EAAjB;AAAA,CAAvB;;GAAMuB,c;UAAuBvB,W;;;AAEpC,eAAeS,KAAf","sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n  },\n})\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}