{"ast":null,"code":"var _jsxFileName = \"/Users/danialfajar/Downloads/tbake-web-staking-platform-master/src/views/Farms/components/FarmTable/Actions/StakedAction.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton } from '@pancakeswap/uikit';\nimport { useLocation } from 'react-router-dom';\nimport UnlockButton from 'components/UnlockButton';\nimport { useWeb3React } from '@web3-react/core';\nimport { useFarmUser } from 'state/hooks';\nimport { fetchFarmUserDataAsync } from 'state/farms';\nimport { useTranslation } from 'contexts/Localization';\nimport { useApprove } from 'hooks/useApprove';\nimport { getBep20Contract } from 'utils/contractHelpers';\nimport { BASE_ADD_LIQUIDITY_URL } from 'config';\nimport { useAppDispatch } from 'state';\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts';\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance';\nimport useStake from 'hooks/useStake';\nimport useUnstake from 'hooks/useUnstake';\nimport useWeb3 from 'hooks/useWeb3';\nimport DepositModal from '../../DepositModal';\nimport WithdrawModal from '../../WithdrawModal';\nimport { ActionContainer, ActionTitles, ActionContent, Earned, Title, Subtle } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`;\n_c = IconButtonWrapper;\n\nconst Staked = ({\n  pid,\n  lpSymbol,\n  lpAddresses,\n  quoteToken,\n  token,\n  userDataReady\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useWeb3React();\n  const [requestedApproval, setRequestedApproval] = useState(false);\n  const {\n    allowance,\n    tokenBalance,\n    stakedBalance\n  } = useFarmUser(pid);\n  const {\n    onStake\n  } = useStake(pid);\n  const {\n    onUnstake\n  } = useUnstake(pid);\n  const web3 = useWeb3();\n  const location = useLocation();\n  const isApproved = account && allowance && allowance.isGreaterThan(0);\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID];\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address\n  });\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`;\n\n  const handleStake = async amount => {\n    await onStake(amount);\n    dispatch(fetchFarmUserDataAsync({\n      account,\n      pids: [pid]\n    }));\n  };\n\n  const handleUnstake = async amount => {\n    await onUnstake(amount);\n    dispatch(fetchFarmUserDataAsync({\n      account,\n      pids: [pid]\n    }));\n  };\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceNumber = getBalanceNumber(stakedBalance);\n\n    if (stakedBalanceNumber > 0 && stakedBalanceNumber < 0.0001) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString();\n    }\n\n    return stakedBalanceNumber.toLocaleString();\n  }, [stakedBalance]);\n  const [onPresentDeposit] = useModal( /*#__PURE__*/_jsxDEV(DepositModal, {\n    max: tokenBalance,\n    onConfirm: handleStake,\n    tokenName: lpSymbol,\n    addLiquidityUrl: addLiquidityUrl\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this));\n  const [onPresentWithdraw] = useModal( /*#__PURE__*/_jsxDEV(WithdrawModal, {\n    max: stakedBalance,\n    onConfirm: handleUnstake,\n    tokenName: lpSymbol\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this));\n  const lpContract = getBep20Contract(lpAddress, web3);\n  const dispatch = useAppDispatch();\n  const {\n    onApprove\n  } = useApprove(lpContract);\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true);\n      await onApprove();\n      dispatch(fetchFarmUserDataAsync({\n        account,\n        pids: [pid]\n      }));\n      setRequestedApproval(false);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [onApprove, dispatch, account, pid]);\n\n  if (!account) {\n    return /*#__PURE__*/_jsxDEV(ActionContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ActionTitles, {\n        children: /*#__PURE__*/_jsxDEV(Subtle, {\n          children: t('Start Farming').toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionContent, {\n        children: /*#__PURE__*/_jsxDEV(UnlockButton, {\n          width: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (isApproved) {\n    if (stakedBalance.gt(0)) {\n      return /*#__PURE__*/_jsxDEV(ActionContainer, {\n        children: [/*#__PURE__*/_jsxDEV(ActionTitles, {\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            children: [lpSymbol, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Subtle, {\n            children: t('Staked').toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ActionContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Earned, {\n              children: displayBalance()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButtonWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              variant: \"secondary\",\n              onClick: onPresentWithdraw,\n              mr: \"6px\",\n              children: /*#__PURE__*/_jsxDEV(MinusIcon, {\n                color: \"primary\",\n                width: \"14px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              variant: \"secondary\",\n              onClick: onPresentDeposit,\n              disabled: ['history', 'archived'].some(item => location.pathname.includes(item)),\n              children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                color: \"primary\",\n                width: \"14px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(ActionContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ActionTitles, {\n        children: [/*#__PURE__*/_jsxDEV(Subtle, {\n          children: [t('Stake').toUpperCase(), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          children: lpSymbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionContent, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          width: \"100%\",\n          onClick: onPresentDeposit,\n          variant: \"secondary\",\n          disabled: ['history', 'archived'].some(item => location.pathname.includes(item)),\n          children: t('Stake LP')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!userDataReady) {\n    return /*#__PURE__*/_jsxDEV(ActionContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ActionTitles, {\n        children: /*#__PURE__*/_jsxDEV(Subtle, {\n          children: t('Start Farming').toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionContent, {\n        children: /*#__PURE__*/_jsxDEV(Skeleton, {\n          width: 180,\n          marginBottom: 28,\n          marginTop: 14\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ActionContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ActionTitles, {\n      children: /*#__PURE__*/_jsxDEV(Subtle, {\n        children: t('Enable Farm').toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActionContent, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        width: \"100%\",\n        disabled: requestedApproval,\n        onClick: handleApprove,\n        variant: \"secondary\",\n        children: t('Enable')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Staked, \"p6ABj5/Ic/q1+TCY1mg55tMvBnU=\", false, function () {\n  return [useTranslation, useWeb3React, useFarmUser, useStake, useUnstake, useWeb3, useLocation, useModal, useModal, useAppDispatch, useApprove];\n});\n\n_c2 = Staked;\nexport default Staked;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IconButtonWrapper\");\n$RefreshReg$(_c2, \"Staked\");","map":{"version":3,"sources":["/Users/danialfajar/Downloads/tbake-web-staking-platform-master/src/views/Farms/components/FarmTable/Actions/StakedAction.tsx"],"names":["React","useState","useCallback","styled","Button","useModal","IconButton","AddIcon","MinusIcon","Skeleton","useLocation","UnlockButton","useWeb3React","useFarmUser","fetchFarmUserDataAsync","useTranslation","useApprove","getBep20Contract","BASE_ADD_LIQUIDITY_URL","useAppDispatch","getLiquidityUrlPathParts","getBalanceNumber","getFullDisplayBalance","useStake","useUnstake","useWeb3","DepositModal","WithdrawModal","ActionContainer","ActionTitles","ActionContent","Earned","Title","Subtle","IconButtonWrapper","div","Staked","pid","lpSymbol","lpAddresses","quoteToken","token","userDataReady","t","account","requestedApproval","setRequestedApproval","allowance","tokenBalance","stakedBalance","onStake","onUnstake","web3","location","isApproved","isGreaterThan","lpAddress","process","env","REACT_APP_CHAIN_ID","liquidityUrlPathParts","quoteTokenAddress","address","tokenAddress","addLiquidityUrl","handleStake","amount","dispatch","pids","handleUnstake","displayBalance","stakedBalanceNumber","toLocaleString","onPresentDeposit","onPresentWithdraw","lpContract","onApprove","handleApprove","e","console","error","toUpperCase","gt","some","item","pathname","includes"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useLocation } from 'react-router-dom'\nimport UnlockButton from 'components/UnlockButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useFarmUser } from 'state/hooks'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useTranslation } from 'contexts/Localization'\nimport { useApprove } from 'hooks/useApprove'\nimport { getBep20Contract } from 'utils/contractHelpers'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport { useAppDispatch } from 'state'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport useStake from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport useWeb3 from 'hooks/useWeb3'\n\nimport DepositModal from '../../DepositModal'\nimport WithdrawModal from '../../WithdrawModal'\nimport { ActionContainer, ActionTitles, ActionContent, Earned, Title, Subtle } from './styles'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({\n  pid,\n  lpSymbol,\n  lpAddresses,\n  quoteToken,\n  token,\n  userDataReady,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n  const web3 = useWeb3()\n  const location = useLocation()\n\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  const handleStake = async (amount: string) => {\n    await onStake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount: string) => {\n    await onUnstake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceNumber = getBalanceNumber(stakedBalance)\n    if (stakedBalanceNumber > 0 && stakedBalanceNumber < 0.0001) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\n    }\n    return stakedBalanceNumber.toLocaleString()\n  }, [stakedBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal max={tokenBalance} onConfirm={handleStake} tokenName={lpSymbol} addLiquidityUrl={addLiquidityUrl} />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={lpSymbol} />,\n  )\n  const lpContract = getBep20Contract(lpAddress, web3)\n  const dispatch = useAppDispatch()\n  const { onApprove } = useApprove(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, dispatch, account, pid])\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Subtle>{t('Start Farming').toUpperCase()}</Subtle>\n        </ActionTitles>\n        <ActionContent>\n          <UnlockButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (isApproved) {\n    if (stakedBalance.gt(0)) {\n      return (\n        <ActionContainer>\n          <ActionTitles>\n            <Title>{lpSymbol} </Title>\n            <Subtle>{t('Staked').toUpperCase()}</Subtle>\n          </ActionTitles>\n          <ActionContent>\n            <div>\n              <Earned>{displayBalance()}</Earned>\n            </div>\n            <IconButtonWrapper>\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\n                <MinusIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n              <IconButton\n                variant=\"secondary\"\n                onClick={onPresentDeposit}\n                disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            </IconButtonWrapper>\n          </ActionContent>\n        </ActionContainer>\n      )\n    }\n\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Subtle>{t('Stake').toUpperCase()} </Subtle>\n          <Title>{lpSymbol}</Title>\n        </ActionTitles>\n        <ActionContent>\n          <Button\n            width=\"100%\"\n            onClick={onPresentDeposit}\n            variant=\"secondary\"\n            disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n          >\n            {t('Stake LP')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataReady) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Subtle>{t('Start Farming').toUpperCase()}</Subtle>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} marginBottom={28} marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Subtle>{t('Enable Farm').toUpperCase()}</Subtle>\n      </ActionTitles>\n      <ActionContent>\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n          {t('Enable')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n"]},"metadata":{},"sourceType":"module"}