{"ast":null,"code":"var _jsxFileName = \"/Users/danialfajar/Downloads/tbake-web-staking-platform-master/src/components/ApyCalculatorModal/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`;\n_c = Grid;\nconst GridItem = styled.div``;\n_c2 = GridItem;\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`;\n_c3 = GridHeaderItem;\n\nconst ApyCalculatorModal = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'CAKE',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice;\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee\n  });\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee\n  });\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee\n  });\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee\n  });\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: t('ROI'),\n    onDismiss: onDismiss,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(GridHeaderItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          bold: true,\n          color: \"textSubtle\",\n          textTransform: \"uppercase\",\n          mb: \"12px\",\n          children: t('Timeframe')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridHeaderItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          bold: true,\n          color: \"textSubtle\",\n          textTransform: \"uppercase\",\n          mr: \"12px\",\n          ml: \"12px\",\n          mb: \"12px\",\n          children: t('ROI')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridHeaderItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          bold: true,\n          color: \"textSubtle\",\n          textTransform: \"uppercase\",\n          mb: \"12px\",\n          children: t('%symbol% per $1,000', {\n            symbol: earningTokenSymbol\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: t('%num%d', {\n            num: 1\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          mr: \"12px\",\n          ml: \"12px\",\n          children: [getRoi({\n            amountEarned: tokenEarnedPerThousand1D,\n            amountInvested: oneThousandDollarsWorthOfToken\n          }).toFixed(roundingDecimals), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: tokenEarnedPerThousand1D\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: t('%num%d', {\n            num: 7\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          mr: \"12px\",\n          ml: \"12px\",\n          children: [getRoi({\n            amountEarned: tokenEarnedPerThousand7D,\n            amountInvested: oneThousandDollarsWorthOfToken\n          }).toFixed(roundingDecimals), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: tokenEarnedPerThousand7D\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: t('%num%d', {\n            num: 30\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          mr: \"12px\",\n          ml: \"12px\",\n          children: [getRoi({\n            amountEarned: tokenEarnedPerThousand30D,\n            amountInvested: oneThousandDollarsWorthOfToken\n          }).toFixed(roundingDecimals), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: tokenEarnedPerThousand30D\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        style: {\n          maxWidth: '180px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: t('365d(APY)')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          mr: \"12px\",\n          ml: \"12px\",\n          children: [getRoi({\n            amountEarned: tokenEarnedPerThousand365D,\n            amountInvested: oneThousandDollarsWorthOfToken\n          }).toFixed(roundingDecimals), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: tokenEarnedPerThousand365D\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        mb: \"28px\",\n        maxWidth: \"280px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          textAlign: \"center\",\n          color: \"textSubtle\",\n          children: t('Calculated based on current rates. Compounding %freq%x daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.', {\n            freq: compoundFrequency.toLocaleString()\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), performanceFee > 0 && /*#__PURE__*/_jsxDEV(Text, {\n          mt: \"14px\",\n          fontSize: \"12px\",\n          textAlign: \"center\",\n          color: \"textSubtle\",\n          children: t('All estimated rates take into account this pool’s %fee%% performance fee', {\n            fee: performanceFee\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(LinkExternal, {\n        href: linkHref,\n        children: linkLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ApyCalculatorModal, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c4 = ApyCalculatorModal;\nexport default ApyCalculatorModal;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Grid\");\n$RefreshReg$(_c2, \"GridItem\");\n$RefreshReg$(_c3, \"GridHeaderItem\");\n$RefreshReg$(_c4, \"ApyCalculatorModal\");","map":{"version":3,"sources":["/Users/danialfajar/Downloads/tbake-web-staking-platform-master/src/components/ApyCalculatorModal/index.tsx"],"names":["React","styled","Modal","Text","LinkExternal","Flex","Box","useTranslation","tokenEarnedPerThousandDollarsCompounding","getRoi","Grid","div","GridItem","GridHeaderItem","ApyCalculatorModal","onDismiss","tokenPrice","apr","linkLabel","linkHref","earningTokenSymbol","roundingDecimals","compoundFrequency","performanceFee","t","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand1D","numberOfDays","farmApr","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","tokenEarnedPerThousand365D","symbol","num","amountEarned","amountInvested","toFixed","maxWidth","freq","toLocaleString","fee"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'CAKE',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      <Grid>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('Timeframe')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mr=\"12px\" ml=\"12px\" mb=\"12px\">\n            {t('ROI')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridHeaderItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem style={{ maxWidth: '180px' }}>\n          <Text>{t('365d(APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"center\">\n        <Box mb=\"28px\" maxWidth=\"280px\">\n          <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\">\n            {t(\n              'Calculated based on current rates. Compounding %freq%x daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n              { freq: compoundFrequency.toLocaleString() },\n            )}\n          </Text>\n          {performanceFee > 0 && (\n            <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\">\n              {t('All estimated rates take into account this pool’s %fee%% performance fee', { fee: performanceFee })}\n            </Text>\n          )}\n        </Box>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n"]},"metadata":{},"sourceType":"module"}