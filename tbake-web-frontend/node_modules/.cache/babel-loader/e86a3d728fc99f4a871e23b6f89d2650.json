{"ast":null,"code":"var _jsxFileName = \"/Users/danialfajar/Downloads/tbake-web-staking-platform-master/src/views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled, { keyframes, css } from 'styled-components';\nimport { Box, Button, Flex, HelpIcon, Link, LinkExternal, MetamaskIcon, Skeleton, Text, TimerIcon, useTooltip } from '@pancakeswap/uikit';\nimport { BASE_URL } from 'config';\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan';\nimport { useBlock, useCakeVault } from 'state/hooks';\nimport BigNumber from 'bignumber.js';\nimport { useTranslation } from 'contexts/Localization';\nimport Balance from 'components/Balance';\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags';\nimport { getAddress } from 'utils/addressHelpers';\nimport { registerToken } from 'utils/wallet';\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance';\nimport { getPoolBlockInfo } from 'views/Pools/helpers';\nimport Harvest from './Harvest';\nimport Stake from './Stake';\nimport Apr from '../Apr';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`;\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`;\nconst StyledActionPanel = styled.div`\n  animation: ${({\n  expanded\n}) => expanded ? css`\n          ${expandAnimation} 300ms linear forwards\n        ` : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({\n  theme\n}) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`;\n_c = StyledActionPanel;\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`;\n_c2 = ActionContainer;\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`;\n_c3 = InfoSection;\n\nconst ActionPanel = ({\n  account,\n  pool,\n  userDataLoaded,\n  expanded,\n  breakpoints\n}) => {\n  _s();\n\n  var _ethereum;\n\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    endBlock,\n    stakingLimit,\n    isAutoVault\n  } = pool;\n  const {\n    t\n  } = useTranslation();\n  const {\n    currentBlock\n  } = useBlock();\n  const {\n    isXs,\n    isSm,\n    isMd\n  } = breakpoints;\n  const showSubtitle = (isXs || isSm) && sousId === 0;\n  const {\n    shouldShowBlockCountdown,\n    blocksUntilStart,\n    blocksRemaining,\n    hasPoolStarted,\n    blocksToDisplay\n  } = getPoolBlockInfo(pool, currentBlock);\n  const isMetaMaskInScope = !!((_ethereum = window.ethereum) === null || _ethereum === void 0 ? void 0 : _ethereum.isMetaMask);\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : '';\n  const imageSrc = `${BASE_URL}/images/tokens/${earningToken.symbol.toLowerCase()}.png`;\n  const {\n    totalCakeInVault,\n    fees: {\n      performanceFee\n    }\n  } = useCakeVault();\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100;\n  const isManualCakePool = sousId === 0;\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals);\n    }\n\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault);\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals);\n    }\n\n    return getBalanceNumber(totalStaked, stakingToken.decimals);\n  };\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', {\n    symbol: stakingToken.symbol\n  }), {\n    placement: 'bottom'\n  });\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.');\n  const autoTooltipText = t('Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.');\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start'\n  });\n  const maxStakeRow = stakingLimit.gt(0) ? /*#__PURE__*/_jsxDEV(Flex, {\n    mb: \"8px\",\n    justifyContent: \"space-between\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      children: [t('Max. stake per user'), \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: `${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this) : null;\n  const blocksRow = blocksRemaining || blocksUntilStart ? /*#__PURE__*/_jsxDEV(Flex, {\n    mb: \"8px\",\n    justifyContent: \"space-between\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      children: [hasPoolStarted ? t('Ends in') : t('Starts in'), \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        external: true,\n        href: getBscScanBlockCountdownUrl(endBlock),\n        children: [/*#__PURE__*/_jsxDEV(Balance, {\n          fontSize: \"16px\",\n          value: blocksToDisplay,\n          decimals: 0,\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          ml: \"4px\",\n          color: \"primary\",\n          textTransform: \"lowercase\",\n          children: t('Blocks')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TimerIcon, {\n          ml: \"4px\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n    width: \"56px\",\n    height: \"16px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 7\n  }, this);\n\n  const aprRow = /*#__PURE__*/_jsxDEV(Flex, {\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    mb: \"8px\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      children: isAutoVault ? t('APY') : t('APR')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Apr, {\n      pool: pool,\n      showIcon: true,\n      performanceFee: isAutoVault ? performanceFeeAsDecimal : 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n\n  const totalStakedRow = /*#__PURE__*/_jsxDEV(Flex, {\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    mb: \"8px\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      maxWidth: ['50px', '100%'],\n      children: t('Total staked')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      children: [totalStaked ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Balance, {\n          fontSize: \"16px\",\n          value: getTotalStakedBalance(),\n          decimals: 0,\n          unit: ` ${stakingToken.symbol}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          ref: totalStakedTargetRef,\n          children: /*#__PURE__*/_jsxDEV(HelpIcon, {\n            color: \"textSubtle\",\n            width: \"20px\",\n            ml: \"6px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        width: \"56px\",\n        height: \"16px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), totalStakedTooltipVisible && totalStakedTooltip]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(StyledActionPanel, {\n    expanded: expanded,\n    children: [/*#__PURE__*/_jsxDEV(InfoSection, {\n      children: [maxStakeRow, (isXs || isSm) && aprRow, (isXs || isSm || isMd) && totalStakedRow, shouldShowBlockCountdown && blocksRow, /*#__PURE__*/_jsxDEV(Flex, {\n        mb: \"8px\",\n        justifyContent: ['flex-end', 'flex-end', 'flex-start'],\n        children: /*#__PURE__*/_jsxDEV(LinkExternal, {\n          href: `https://pancakeswap.info/token/${getAddress(earningToken.address)}`,\n          bold: false,\n          children: t('Info site')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        mb: \"8px\",\n        justifyContent: ['flex-end', 'flex-end', 'flex-start'],\n        children: /*#__PURE__*/_jsxDEV(LinkExternal, {\n          href: earningToken.projectLink,\n          bold: false,\n          children: t('Project site')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), account && isMetaMaskInScope && tokenAddress && /*#__PURE__*/_jsxDEV(Flex, {\n        mb: \"8px\",\n        justifyContent: ['flex-end', 'flex-end', 'flex-start'],\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          p: \"0\",\n          height: \"auto\",\n          onClick: () => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc),\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            color: \"primary\",\n            children: t('Add to Metamask')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MetamaskIcon, {\n            ml: \"4px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), isAutoVault ? /*#__PURE__*/_jsxDEV(CompoundingPoolTag, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(ManualPoolTag, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 49\n      }, this), tagTooltipVisible && tagTooltip, /*#__PURE__*/_jsxDEV(\"span\", {\n        ref: tagTargetRef,\n        children: /*#__PURE__*/_jsxDEV(HelpIcon, {\n          ml: \"4px\",\n          width: \"20px\",\n          height: \"20px\",\n          color: \"textSubtle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActionContainer, {\n      children: [showSubtitle && /*#__PURE__*/_jsxDEV(Text, {\n        mt: \"4px\",\n        mb: \"16px\",\n        color: \"textSubtle\",\n        children: isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Harvest, { ...pool,\n        userDataLoaded: userDataLoaded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stake, {\n        pool: pool,\n        userDataLoaded: userDataLoaded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ActionPanel, \"4/SgsDRYg/MX2pPAM5Vi/3l3cEE=\", false, function () {\n  return [useTranslation, useBlock, useCakeVault, useTooltip, useTooltip];\n});\n\n_c4 = ActionPanel;\nexport default ActionPanel;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledActionPanel\");\n$RefreshReg$(_c2, \"ActionContainer\");\n$RefreshReg$(_c3, \"InfoSection\");\n$RefreshReg$(_c4, \"ActionPanel\");","map":{"version":3,"sources":["/Users/danialfajar/Downloads/tbake-web-staking-platform-master/src/views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx"],"names":["React","styled","keyframes","css","Box","Button","Flex","HelpIcon","Link","LinkExternal","MetamaskIcon","Skeleton","Text","TimerIcon","useTooltip","BASE_URL","getBscScanBlockCountdownUrl","useBlock","useCakeVault","BigNumber","useTranslation","Balance","CompoundingPoolTag","ManualPoolTag","getAddress","registerToken","getBalanceNumber","getFullDisplayBalance","getPoolBlockInfo","Harvest","Stake","Apr","expandAnimation","collapseAnimation","StyledActionPanel","div","expanded","theme","colors","dropdown","mediaQueries","lg","ActionContainer","sm","InfoSection","ActionPanel","account","pool","userDataLoaded","breakpoints","sousId","stakingToken","earningToken","totalStaked","endBlock","stakingLimit","isAutoVault","t","currentBlock","isXs","isSm","isMd","showSubtitle","shouldShowBlockCountdown","blocksUntilStart","blocksRemaining","hasPoolStarted","blocksToDisplay","isMetaMaskInScope","window","ethereum","isMetaMask","tokenAddress","address","imageSrc","symbol","toLowerCase","totalCakeInVault","fees","performanceFee","performanceFeeAsDecimal","isManualCakePool","getTotalStakedBalance","decimals","manualCakeTotalMinusAutoVault","minus","targetRef","totalStakedTargetRef","tooltip","totalStakedTooltip","tooltipVisible","totalStakedTooltipVisible","placement","manualTooltipText","autoTooltipText","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","gt","blocksRow","aprRow","totalStakedRow","projectLink","toLocaleLowerCase"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_URL } from 'config'\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\nimport { useBlock, useCakeVault } from 'state/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const { sousId, stakingToken, earningToken, totalStaked, endBlock, stakingLimit, isAutoVault } = pool\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!(window as WindowChain).ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const imageSrc = `${BASE_URL}/images/tokens/${earningToken.symbol.toLowerCase()}.png`\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n        <Flex>\n          <Link external href={getBscScanBlockCountdownUrl(endBlock)}>\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Link>\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false}>\n            {t('Info site')}\n          </LinkExternal>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('Project site')}\n          </LinkExternal>\n        </Flex>\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n"]},"metadata":{},"sourceType":"module"}